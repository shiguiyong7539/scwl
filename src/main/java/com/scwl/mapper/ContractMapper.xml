<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.scwl.mapper.ContractMapper" >
  <resultMap id="BaseResultMap" type="com.scwl.pojo.Contract" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="department" property="department" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="total_num" property="totalNum" jdbcType="INTEGER" />
    <result column="finish_num" property="finishNum" jdbcType="INTEGER" />
    <result column="unfinish_num" property="unfinishNum" jdbcType="INTEGER" />
    <result column="start_time" property="startTime" jdbcType="DATE" />
    <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, department, name, type, total_num, finish_num, unfinish_num, start_time, add_time,
    remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.scwl.pojo.ContractExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from contract
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from contract
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from contract
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.scwl.pojo.ContractExample" >
    delete from contract
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.scwl.pojo.Contract" useGeneratedKeys="true" keyProperty="id">
    insert into contract (id, department, name,
      type, total_num, finish_num,
      unfinish_num, start_time, add_time,
      remark)
    values (#{id,jdbcType=INTEGER}, #{department,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
      #{type,jdbcType=VARCHAR}, #{totalNum,jdbcType=INTEGER}, #{finishNum,jdbcType=INTEGER},
      #{unfinishNum,jdbcType=INTEGER}, #{startTime,jdbcType=DATE}, #{addTime,jdbcType=TIMESTAMP},
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.scwl.pojo.Contract" >
    insert into contract
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="department != null" >
        department,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="totalNum != null" >
        total_num,
      </if>
      <if test="finishNum != null" >
        finish_num,
      </if>
      <if test="unfinishNum != null" >
        unfinish_num,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="department != null" >
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="totalNum != null" >
        #{totalNum,jdbcType=INTEGER},
      </if>
      <if test="finishNum != null" >
        #{finishNum,jdbcType=INTEGER},
      </if>
      <if test="unfinishNum != null" >
        #{unfinishNum,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=DATE},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.scwl.pojo.ContractExample" resultType="java.lang.Integer" >
    select count(*) from contract
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update contract
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.department != null" >
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.totalNum != null" >
        total_num = #{record.totalNum,jdbcType=INTEGER},
      </if>
      <if test="record.finishNum != null" >
        finish_num = #{record.finishNum,jdbcType=INTEGER},
      </if>
      <if test="record.unfinishNum != null" >
        unfinish_num = #{record.unfinishNum,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=DATE},
      </if>
      <if test="record.addTime != null" >
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update contract
    set id = #{record.id,jdbcType=INTEGER},
    department = #{record.department,jdbcType=VARCHAR},
    name = #{record.name,jdbcType=VARCHAR},
    type = #{record.type,jdbcType=VARCHAR},
    total_num = #{record.totalNum,jdbcType=INTEGER},
    finish_num = #{record.finishNum,jdbcType=INTEGER},
    unfinish_num = #{record.unfinishNum,jdbcType=INTEGER},
    start_time = #{record.startTime,jdbcType=DATE},
    add_time = #{record.addTime,jdbcType=TIMESTAMP},
    remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.scwl.pojo.Contract" >
    update contract
    <set >
      <if test="department != null" >
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="totalNum != null" >
        total_num = #{totalNum,jdbcType=INTEGER},
      </if>
      <if test="finishNum != null" >
        finish_num = #{finishNum,jdbcType=INTEGER},
      </if>
      <if test="unfinishNum != null" >
        unfinish_num = #{unfinishNum,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=DATE},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.scwl.pojo.Contract" >
    update contract
    set department = #{department,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      total_num = #{totalNum,jdbcType=INTEGER},
      finish_num = #{finishNum,jdbcType=INTEGER},
      unfinish_num = #{unfinishNum,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=DATE},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getTotal"  resultMap="BaseResultMap">
    select count(id) as total_num,department from contract group by department
  </select>
  <select id="getContinueTotal"  parameterType="java.lang.String" resultType="java.lang.Integer">
    select count(id)  from contract where type = '履行中'  and  department=#{department}
  </select>
  <select id="getOverTotal"  parameterType="java.lang.String" resultType="java.lang.Integer">
    select count(id)  from contract where type = '履行完毕' and  department=#{department}
  </select>
  <update id="update"  parameterType="com.scwl.pojo.Contract" >
    update contract
    <set >
      <if test="department != null and department != ''" >
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="name != null and name != ''" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null and type != ''" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="totalNum != null" >
        total_num = #{totalNum,jdbcType=INTEGER},
      </if>
      <if test="finishNum != null" >
        finish_num = #{finishNum,jdbcType=INTEGER},
      </if>
      <if test="unfinishNum != null" >
        unfinish_num = #{unfinishNum,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=DATE},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=DATE},
      </if>
      <if test="remark != null and remark != ''" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getTotalByYear"  resultMap="BaseResultMap">
    select count(id) as total_num,department from contract where   YEAR(start_time) = #{yearNum} group by department
  </select>

  <select id="getContinueTotalByYear"   resultType="java.lang.Integer">
    select count(id)  from contract where type = '履行中'  and  department=#{department} and YEAR(start_time) = #{yearNum}
  </select>
  <select id="getOverTotalByYear"  resultType="java.lang.Integer">
    select count(id)  from contract where type = '履行完毕' and  department=#{department} and YEAR(start_time) = #{yearNum}
  </select>
</mapper>