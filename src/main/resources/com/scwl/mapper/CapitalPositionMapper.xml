<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.scwl.mapper.CapitalPositionMapper" >
  <resultMap id="BaseResultMap" type="com.scwl.pojo.CapitalPosition" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="category" property="category" jdbcType="VARCHAR" />
    <result column="income" property="income" jdbcType="DECIMAL" />
    <result column="income_total" property="incomeTotal" jdbcType="DECIMAL" />
    <result column="contract_expend" property="contractExpend" jdbcType="DECIMAL" />
    <result column="special_expend" property="specialExpend" jdbcType="DECIMAL" />
    <result column="daily_expend" property="dailyExpend" jdbcType="DECIMAL" />
    <result column="term" property="term" jdbcType="DATE" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, type, category, income, income_total, contract_expend, special_expend, daily_expend, 
    term, remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.scwl.pojo.CapitalPositionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from capital_position
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from capital_position
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from capital_position
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.scwl.pojo.CapitalPositionExample" >
    delete from capital_position
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.scwl.pojo.CapitalPosition" useGeneratedKeys="true" keyProperty="id">
    insert into capital_position (id, type, category, 
      income, income_total, contract_expend, 
      special_expend, daily_expend, term, 
      remark)
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{category,jdbcType=VARCHAR}, 
      #{income,jdbcType=DECIMAL}, #{incomeTotal,jdbcType=DECIMAL}, #{contractExpend,jdbcType=DECIMAL}, 
      #{specialExpend,jdbcType=DECIMAL}, #{dailyExpend,jdbcType=DECIMAL}, #{term,jdbcType=DATE}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.scwl.pojo.CapitalPosition" >
    insert into capital_position
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="category != null" >
        category,
      </if>
      <if test="income != null" >
        income,
      </if>
      <if test="incomeTotal != null" >
        income_total,
      </if>
      <if test="contractExpend != null" >
        contract_expend,
      </if>
      <if test="specialExpend != null" >
        special_expend,
      </if>
      <if test="dailyExpend != null" >
        daily_expend,
      </if>
      <if test="term != null" >
        term,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="category != null" >
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="income != null" >
        #{income,jdbcType=DECIMAL},
      </if>
      <if test="incomeTotal != null" >
        #{incomeTotal,jdbcType=DECIMAL},
      </if>
      <if test="contractExpend != null" >
        #{contractExpend,jdbcType=DECIMAL},
      </if>
      <if test="specialExpend != null" >
        #{specialExpend,jdbcType=DECIMAL},
      </if>
      <if test="dailyExpend != null" >
        #{dailyExpend,jdbcType=DECIMAL},
      </if>
      <if test="term != null" >
        #{term,jdbcType=DATE},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.scwl.pojo.CapitalPositionExample" resultType="java.lang.Integer" >
    select count(*) from capital_position
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update capital_position
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.category != null" >
        category = #{record.category,jdbcType=VARCHAR},
      </if>
      <if test="record.income != null" >
        income = #{record.income,jdbcType=DECIMAL},
      </if>
      <if test="record.incomeTotal != null" >
        income_total = #{record.incomeTotal,jdbcType=DECIMAL},
      </if>
      <if test="record.contractExpend != null" >
        contract_expend = #{record.contractExpend,jdbcType=DECIMAL},
      </if>
      <if test="record.specialExpend != null" >
        special_expend = #{record.specialExpend,jdbcType=DECIMAL},
      </if>
      <if test="record.dailyExpend != null" >
        daily_expend = #{record.dailyExpend,jdbcType=DECIMAL},
      </if>
      <if test="record.term != null" >
        term = #{record.term,jdbcType=DATE},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update capital_position
    set id = #{record.id,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      category = #{record.category,jdbcType=VARCHAR},
      income = #{record.income,jdbcType=DECIMAL},
      income_total = #{record.incomeTotal,jdbcType=DECIMAL},
      contract_expend = #{record.contractExpend,jdbcType=DECIMAL},
      special_expend = #{record.specialExpend,jdbcType=DECIMAL},
      daily_expend = #{record.dailyExpend,jdbcType=DECIMAL},
      term = #{record.term,jdbcType=DATE},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.scwl.pojo.CapitalPosition" >
    update capital_position
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="category != null" >
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="income != null" >
        income = #{income,jdbcType=DECIMAL},
      </if>
      <if test="incomeTotal != null" >
        income_total = #{incomeTotal,jdbcType=DECIMAL},
      </if>
      <if test="contractExpend != null" >
        contract_expend = #{contractExpend,jdbcType=DECIMAL},
      </if>
      <if test="specialExpend != null" >
        special_expend = #{specialExpend,jdbcType=DECIMAL},
      </if>
      <if test="dailyExpend != null" >
        daily_expend = #{dailyExpend,jdbcType=DECIMAL},
      </if>
      <if test="term != null" >
        term = #{term,jdbcType=DATE},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.scwl.pojo.CapitalPosition" >
    update capital_position
    set type = #{type,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      income = #{income,jdbcType=DECIMAL},
      income_total = #{incomeTotal,jdbcType=DECIMAL},
      contract_expend = #{contractExpend,jdbcType=DECIMAL},
      special_expend = #{specialExpend,jdbcType=DECIMAL},
      daily_expend = #{dailyExpend,jdbcType=DECIMAL},
      term = #{term,jdbcType=DATE},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getCapitalByMonth" parameterType="java.lang.String" resultMap="BaseResultMap">
   select
     type,sum(income) as income,sum(income_total) as income_total,sum(contract_expend) as contract_expend,sum(special_expend) as special_expend,
     sum(daily_expend) as daily_expend,DATE_FORMAT(term,#{period})  as remark
    from capital_position
    where DATE_FORMAT(term,#{period}) >= DATE_SUB(DATE_FORMAT(NOW(), '%Y-%m-01'), INTERVAL 6 MONTH)
    GROUP BY DATE_FORMAT(term,#{period})
  </select>

  <select id="getCapitalByYear" parameterType="java.lang.String" resultMap="BaseResultMap">
      select
         type,sum(income) as income,sum(income_total) as income_total,sum(contract_expend) as contract_expend,sum(special_expend) as special_expend,
        sum(daily_expend) as daily_expend,  YEAR(term) as remark
      from capital_position
      where YEAR(term) >= YEAR(DATE_SUB(DATE_FORMAT(NOW(), '%Y-01-01'), INTERVAL 6 YEAR))
       GROUP BY YEAR(term)
  </select>


  <select id="getIncome" parameterType="java.lang.String" resultMap="BaseResultMap">
      select
        type,sum(income) as income,sum(income_total) as income_total,
        MONTH(term) as remark
    from capital_position
   where  type ='收入' and DATE_FORMAT(term,'%Y-%m-01') >= DATE_SUB(DATE_FORMAT(NOW(), '%Y-01-01'), INTERVAL 12 MONTH)
     GROUP BY DATE_FORMAT(term,'%Y-%m')
     ORDER BY DATE_FORMAT(term,'%Y-%m')
  </select>

  <select id="getExpend" parameterType="java.lang.String" resultMap="BaseResultMap">
          select
        type,sum(contract_expend) as contract_expend,sum(special_expend) as special_expend,
        sum(daily_expend) as daily_expend, MONTH(term) as remark
    from capital_position
   where  type ='支出' and DATE_FORMAT(term,'%Y-%m-01') >= DATE_SUB(DATE_FORMAT(NOW(), '%Y-01-01'), INTERVAL 12 MONTH)
     GROUP BY DATE_FORMAT(term,'%Y-%m')
     ORDER BY DATE_FORMAT(term,'%Y-%m')
  </select>
</mapper>